import com.buildsrc.kts.AndroidConfig
import com.buildsrc.kts.Dependencies

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-parcelize"

Properties properties = new Properties()
properties.load(new FileInputStream(file(rootProject.file("signing.properties"))))

android {
    compileSdkVersion AndroidConfig.compileSdkVersion

    useLibrary 'org.apache.http.legacy'
    viewBinding {
        enabled = true
    }
    signingConfigs {
        release {
            keyAlias properties['keyAlias']
            keyPassword properties['keyPassword']
            storeFile file(properties['storeFile'])
            storePassword properties['storePassword']
        }
    }

    defaultConfig {
        setApplicationId(AndroidConfig.AppInfo.applicationId)
        setVersionCode(AndroidConfig.AppInfo.versionCode)
        setVersionName(AndroidConfig.AppInfo.versionName)
        minSdkVersion AndroidConfig.minSdkVersion
        targetSdkVersion AndroidConfig.targetSdkVersion
        ndk {
            //flutter 目前只支持：'armeabi-v7a', 'arm64-v8a', 'x86_64'
            abiFilters "arm64-v8a", 'armeabi-v7a' //, 'x86', 'mips',
        }
        multiDexEnabled true

        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }

        //app名
        resValue("string", "app_name", AndroidConfig.AppInfo.appName)
    }

    buildTypes {
        release {
            minifyEnabled AndroidConfig.AppInfo.releaseObfuscate
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            renderscriptDebuggable true
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            renderscriptDebuggable true
            zipAlignEnabled false
            signingConfig signingConfigs.release
        }

        debugProguard {
            //从release出会导致一些key是release的
            initWith(debug)
            minifyEnabled AndroidConfig.AppInfo.debugProguardObfuscate
            zipAlignEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        //为java继承的kotlin interface default方法添加实现
        freeCompilerArgs += ["-Xjvm-default=all-compatibility"]
    }

    dexOptions {
        javaMaxHeapSize "4G"
//        //关闭预编译
//        preDexLibraries false
//        dexInProcess = false
    }

    lintOptions {
        //禁用掉丢失多国语言的错误提示
        disable 'MissingTranslation'
        //禁用掉manifest仅支持竖屏的错误提示
        disable 'LockedOrientationActivity'
        //禁用掉代码setText必须使用string res的警告
        disable 'SetTextI18n'
        //禁用掉xml的text必须使用string res的警告
        disable 'HardcodedText'
        //禁用掉xml的ImageView必须添加描述的警告
        disable 'ContentDescription'
        //禁用掉text使用dp的警告
        disable 'SpUsage'

        abortOnError false
    }

}


dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    implementation Dependencies.AndroidX.appcompat
    implementation Dependencies.OpenSourceLibrary.junit
    implementation Dependencies.OpenSourceLibrary.glide
    implementation Dependencies.Kotlin.kotlin_stdlib
    implementation Dependencies.AndroidX.constraintLayout
    api Dependencies.AndroidX.core_ktx
    implementation(Dependencies.Material.material)
    implementation(Dependencies.OpenSourceLibrary.recyclerView)
    implementation(Dependencies.OpenSourceLibrary.chadAdapter)
    implementation(Dependencies.Foundation.activityFragment)
    implementation(Dependencies.Foundation.view_binding_helper)
    implementation(Dependencies.Foundation.rv_adapter)
}